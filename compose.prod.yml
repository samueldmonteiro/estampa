services:
  api:
    container_name: api

    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        UID: ${UID}
        USER: ${USER}

    volumes:
      - ./api:/var/www/html

    depends_on:
      - db
    networks:
      - estampas

    command: |
      bash -c "[ ! -d 'vendor' ] && composer install && symfony serve --listen-ip=0.0.0.0 --port=8000 || symfony serve --listen-ip=0.0.0.0 --port=8000"

    ports:
      - "127.0.0.1:8000:8000"

  frontend:
    container_name: frontend

    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}

    volumes:
      - ./frontend:/app

    command: |
      bash -c "[ ! -d 'node_modules' ] && npm install && npm run build && npm run preview -- --host 0.0.0.0 --port 5173 || npm run preview -- --host 0.0.0.0 --port 5173"

    networks:
      - estampas

    ports:
      - "127.0.0.1:5173:5173"

  db:
    container_name: db
    image: mysql:8.0.30
    restart: unless-stopped

    volumes:
      - db_data:/var/lib/mysql

    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}

    networks:
      - estampas

    ports:
      - "127.0.0.1:3306:3306"

  db_tests:
      container_name: db_tests
      image: mysql:8.0.30
      restart: unless-stopped

      volumes:
        - db_tests_data:/var/lib/mysql

      environment:
        - MYSQL_DATABASE=${DB_DATABASE}
        - MYSQL_USER=${DB_USER}
        - MYSQL_PASSWORD=${DB_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}

      networks:
        - estampas

      ports:
        - "127.0.0.1:3308:3306"

networks:
  estampas:
    driver: bridge

volumes:
  db_data:
  db_tests_data:
